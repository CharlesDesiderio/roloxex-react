{"version":3,"sources":["EditPerson.js","DisplayCard.js","AddPerson.js","App.js","index.js"],"names":["EditPerson","props","useState","person","formInfo","setFormInfo","handleChange","e","target","name","value","className","onClick","editItem","role","aria-label","id","fetch","method","headers","body","JSON","stringify","then","res","json","queryDB","catch","err","console","log","onSubmit","preventDefault","htmlFor","onChange","required","type","given","family","phone","email","gender","pronouns","birthday","address","website","notes","DisplayCard","isEdit","setIsEdit","AddPerson","defaultFormInfo","expandBox","useRef","toggleButton","addContactShow","ref","current","style","backgroundColor","boxShadow","height","width","innerHTML","App","people","setPeople","response","data","useEffect","length","sort","a","b","toUpperCase","map","x","key","_id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a806f3e7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst EditPerson = (props) => {\r\n  const [formInfo, setFormInfo] = useState(props.person);\r\n\r\n  const handleChange = (e) => {\r\n    setFormInfo({\r\n      ...formInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"https://apple-plausible-ladybug.glitch.me/edit/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ formInfo }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        setFormInfo(formInfo);\r\n        props.queryDB();\r\n        props.editItem();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    fetch(\"https://apple-plausible-ladybug.glitch.me/delete/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        props.queryDB();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"editPerson\">\r\n      <button className=\"editButton cancelButton\" onClick={() => props.editItem()}><span role=\"img\" aria-label=\"Cancel\">❌</span></button>\r\n      <button className=\"deleteButton\" onClick={() => deleteItem(props.person.id)}><span role=\"img\" aria-label=\"Delete\">🗑️</span></button>\r\n      <form onSubmit={handleSubmit}>\r\n        <p className=\"name-field\">\r\n          <label htmlFor=\"edit-given-name\"></label>\r\n          <input\r\n            onChange={handleChange}\r\n            required\r\n            id={`${props.person.id}-edit-given-name`}\r\n            name=\"given\"\r\n            type=\"text\"\r\n            value={formInfo.given}\r\n          />\r\n          <label htmlFor=\"edit-family-name\"></label>\r\n          <input\r\n            onChange={handleChange}\r\n            required\r\n            id={`${props.person.id}-edit-family-name`}\r\n            name=\"family\"\r\n            type=\"text\"\r\n            value={formInfo.family}\r\n          />\r\n\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-phone\">Phone Number: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-phone`}\r\n            name=\"phone\"\r\n            type=\"text\"\r\n            value={formInfo.phone}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-email\">E-Mail: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-email`}\r\n            name=\"email\"\r\n            type=\"text\"\r\n            value={formInfo.email}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-gender\">Gender: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-gender`}\r\n            name=\"gender\"\r\n            type=\"text\"\r\n            value={formInfo.gender}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-pronouns\">Pronouns: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-pronouns`}\r\n            name=\"pronouns\"\r\n            type=\"text\"\r\n            value={formInfo.pronouns}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-birthday\">Birthday: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-birthday`}\r\n            name=\"birthday\"\r\n            type=\"text\"\r\n            value={formInfo.birthday}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-address\">Address: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-address`}\r\n            name=\"address\"\r\n            type=\"text\"\r\n            value={formInfo.address}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-website\">Website: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-website`}\r\n            name=\"website\"\r\n            type=\"text\"\r\n            value={formInfo.website}\r\n          />\r\n        </p>\r\n        <p className=\"editPerson-p\">\r\n          <label htmlFor=\"edit-notes\">Notes: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id={`${props.person.id}-edit-notes`}\r\n            name=\"notes\"\r\n            type=\"textarea\"\r\n            value={formInfo.notes}\r\n          />\r\n        </p>\r\n        <button className=\"updateButton\">Update</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPerson;\r\n","import React, { useState } from \"react\";\r\nimport EditPerson from \"./EditPerson.js\";\r\n\r\n// rolodex\r\n\r\n// id: <-- unix date; can double as creation date, I guess, but why would I need that?\r\n// name: { family, given } <-- Avoid using first/last. Doesn't work right with names from Asia. Can allow a toggle to select how that contact's name should be ordered, too?\r\n// phone: ''\r\n// email: ''\r\n\r\n// gender: '' <-- STRING\r\n// pronouns: '' <-- STRING - seriously, let people fill these in however they want. There's not going to be a 'search-by-gender' fucntion. It's not a dating app.\r\n// DOB (unix date)\r\n\r\n// address '' <-- Just a big 'ol textarea field. Not every country does the city/state/zip combo. Saves me from having to parse zip codes, they're different lengths in different countries.\r\n\r\n// website: '' <-- Can literally add anything, but I can detect for titles (facebook/twitter/instagram, etc) to pull a FontAwesome icon. Let's keep it to one for now.\r\n// notes: ''\r\n\r\nconst DisplayCard = (props) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const editItem = () => {\r\n    setIsEdit(!isEdit);\r\n  };\r\n\r\n  return !isEdit ? (\r\n    <div className=\"displayCard\">\r\n      <button className=\"editButton\" onClick={() => editItem(props.person.id)}>\r\n      <span role=\"img\" aria-label=\"Edit\">📝</span>\r\n      </button>\r\n      <div className=\"showCard\">\r\n        <p className=\"displayCard-p name-field\">\r\n          {props.person.given} {props.person.family}\r\n        </p>\r\n        {props.person.phone ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n            Phone Number: </p>\r\n            <p className=\"contact-info\">{props.person.phone}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {props.person.email ? (\r\n          <div className=\"displayCard-p\">\r\n            <p className=\"label-p\">E-Mail: </p>\r\n            <p className=\"contact-info\">{props.person.email}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.person.gender ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n          \r\n            Gender: </p>\r\n            <p className=\"contact-info\">{props.person.gender}</p>\r\n            </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.person.pronouns ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n            Pronouns: </p>\r\n            <p className=\"contact-info\">{props.person.pronouns}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.person.birthday ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n            Birthday: </p>\r\n            <p className=\"contact-info\">{props.person.birthday}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.person.address ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n            Address: </p>\r\n            <p className=\"contact-info\">{props.person.address}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.person.website ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n            Website: </p>\r\n            <p className=\"contact-info\">{props.person.website}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.person.notes ? (\r\n          <div className=\"displayCard-p\">\r\n          <p className=\"displayCard-p\">\r\n            Notes:</p>\r\n            <p className=\"contact-info\">{props.person.notes}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <div className=\"editCard\">\r\n        <EditPerson\r\n          queryDB={props.queryDB}\r\n          editItem={editItem}\r\n          person={props.person}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayCard;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nconst AddPerson = (props) => {\r\n  const defaultFormInfo = {\r\n    family: \"\",\r\n    given: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    pronouns: \"\",\r\n    birthday: \"\",\r\n    address: \"\",\r\n    website: \"\",\r\n    notes: \"\",\r\n  };\r\n\r\n  const [formInfo, setFormInfo] = useState(defaultFormInfo);\r\n\r\n  const expandBox = useRef(null);\r\n  const toggleButton = useRef(null);\r\n\r\n  let addContactShow = false;\r\n\r\n  const showAddBox = () => {\r\n    expandBox.current.style.backgroundColor = addContactShow ? \"white\" : \"#3498db\";\r\n    expandBox.current.style.boxShadow = addContactShow ? \"none\" : \"0px 0px 8px black\"\r\n    expandBox.current.style.height = addContactShow ? \"10px\" : \"auto\";\r\n    expandBox.current.style.width = addContactShow ? \"150px\" : \"auto\";\r\n    toggleButton.current.innerHTML = addContactShow ? \"➕\" : \"❌\"\r\n    addContactShow = !addContactShow;\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"https://apple-plausible-ladybug.glitch.me/add/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ formInfo }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        setFormInfo(defaultFormInfo);\r\n        props.queryDB();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormInfo({\r\n      ...formInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div ref={expandBox} className=\"addPerson\">\r\n    <button onClick={() => showAddBox()} className=\"newContact\"><span role=\"img\" ref={toggleButton} aria-label=\"Add Contact\">➕</span></button>\r\n      <form onSubmit={handleSubmit}>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"given-name\">Given Name *: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            required\r\n            id=\"given-name\"\r\n            name=\"given\"\r\n            type=\"text\"\r\n            value={formInfo.given}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"family-name\">Family Name *: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            required\r\n            id=\"family-name\"\r\n            name=\"family\"\r\n            type=\"text\"\r\n            value={formInfo.family}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"phone\">Phone Number: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            type=\"text\"\r\n            value={formInfo.phone}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"email\">E-Mail Address: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={formInfo.email}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"gender\">Gender: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"gender\"\r\n            name=\"gender\"\r\n            type=\"text\"\r\n            value={formInfo.gender}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"pronouns\">Pronouns: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"pronouns\"\r\n            name=\"pronouns\"\r\n            type=\"text\"\r\n            value={formInfo.pronouns}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"birthday\">Birthday: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"birthday\"\r\n            name=\"birthday\"\r\n            type=\"text\"\r\n            value={formInfo.birthday}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"address\">Address: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"address\"\r\n            name=\"address\"\r\n            type=\"text\"\r\n            value={formInfo.address}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"website\">Website: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"website\"\r\n            name=\"website\"\r\n            type=\"text\"\r\n            value={formInfo.website}\r\n          />\r\n        </p>\r\n        <p className=\"addPerson-p\">\r\n          <label htmlFor=\"notes\">Notes: </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"notes\"\r\n            name=\"notes\"\r\n            type=\"textarea\"\r\n            value={formInfo.notes}\r\n          />\r\n        </p>\r\n\r\n        <button className=\"submitContact\">Add Contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPerson;\r\n","import React, { useState, useEffect } from \"react\";\nimport DisplayCard from \"./DisplayCard.js\";\nimport AddPerson from \"./AddPerson.js\";\nimport './style.css';\n\n// OH hey the backend stuff is gonna be done through Glitch, here's the link: https://apple-plausible-ladybug.glitch.me/\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  console.log(people)\n  const queryDB = () => {\n    fetch(\"https://apple-plausible-ladybug.glitch.me/names/\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setPeople(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    queryDB()\n  }, []);\n\n  return people.length ? (\n    <div className=\"App\">\n      \n      {people\n      .sort((a, b) => {\n        return a.family.toUpperCase() < b.family.toUpperCase() ? -1 : 1\n      })\n      .map((x) => {\n        return <DisplayCard queryDB={queryDB} key={x._id} person={x} />;\n      })}\n      <AddPerson queryDB={queryDB} />\n    </div>\n  ) : (\n    <div><h1>LOADING</h1></div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}